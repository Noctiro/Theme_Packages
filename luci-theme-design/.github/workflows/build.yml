name: Build

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      choich_branch:
        description: 'branch'
        required: true
        default: 'main' 
        type: choice
        options:
        - main
        - test
jobs:
  build:
    runs-on: ubuntu-20.04
      
    steps:

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
          uname -a
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue
          ulimit -a
      - name: Download SDK
        run: |
          wget https://archive.openwrt.org/releases/18.06.9/targets/x86/64/openwrt-sdk-18.06.9-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz
          xz -d openwrt-sdk-18.06.9-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz
          tar -xf openwrt-sdk-18.06.9-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar
          mv openwrt-sdk-18.06.9-x86-64_gcc-7.3.0_musl.Linux-x86_64 openwrt-sdk
      - name: Build
        id: build
        run: | 
          cd openwrt-sdk
          git clone -b "${{ inputs.choich_branch }}" https://github.com/gngpp/luci-theme-design.git package/luci-theme-design
          ./scripts/feeds update -a && ./scripts/feeds install -a
          echo "CONFIG_PACKAGE_luci-theme-design=y" >> .config
          make defconfig
          make package/luci-theme-design/compile V=s -j$(nproc)
          TARGET="$(find bin/ | grep  luci-theme-design)"
          echo "TARGET=$(pwd)/$TARGET"
          echo "TARGET=$(pwd)/$TARGET" >> $GITHUB_OUTPUT
          echo "status=success" >> $GITHUB_OUTPUT
      - name: Generate release tag
        id: tag
        run: |
          cd openwrt-sdk && cd package/luci-theme-design
          echo "release_tag=$(cat Makefile | grep PKG_VERSION | sed 's/PKG_VERSION:=//')" >> $GITHUB_OUTPUT
          echo "release_date=$(cat Makefile | grep PKG_RELEASE | sed 's/PKG_RELEASE:=//')" >> $GITHUB_OUTPUT
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: steps.build.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          name: ${{ steps.tag.outputs.release_tag }}-${{ steps.tag.outputs.release_date }} luci-theme-design 主题下载-${{ inputs.choich_branch }}
          tag_name: ${{ steps.tag.outputs.release_tag }}-${{ steps.tag.outputs.release_date }}
          files: ${{ steps.build.outputs.TARGET }}
